{"version":3,"sources":["../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormFileInput.js","../node_modules/react-bootstrap/esm/FormFileLabel.js","../node_modules/react-bootstrap/esm/FormFile.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/Badge.js","abi/erc20.js","abi/gnosisModuleManagerAbi.js","abi/gnosisOwnerManagerAbi.js","app/views/dapp/PieChart.jsx","app/views/dapp/DappEstate.jsx","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/prop-types-extra/lib/all.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormLabel.js"],"names":["FormCheckInput","React","forwardRef","_ref","ref","id","bsPrefix","bsCustomPrefix","className","isValid","isInvalid","isStatic","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","_useContext","useContext","FormContext","controlId","custom","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","type","FormCheckLabel","htmlFor","FormCheck","inline","disabled","feedback","style","title","label","children","propCustom","innerFormContext","useMemo","hasLabel","input","Provider","value","Fragment","Feedback","Input","Label","FormFileInput","lang","FormFileLabel","FormFile","dataBrowse","_ref$inputAs","inputAs","FormText","muted","Switch","Form","validated","Row","createWithBsPrefix","Group","FormGroup","Control","FormControl","Check","File","FormLabel","Text","Badge","variant","pill","prefix","module","exports","PieChart","data","height","name","color","length","option","tooltip","show","backgroundColor","series","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","CPK","require","SENTINAL_ADDRESS","BeneficiaryPieChart","beneficiaries","console","log","i","push","DappEstate","wallet","useWallet","useState","undefined","match","params","address","localStorageService","setItem","storedEstate","getItem","estateAddress","owner","setOwner","executor","setExecutor","gnosisSafe","setGnosisSafe","liveliness","setLiveliness","setBeneficiaries","beneficiarySelfShares","setBeneficiarySelfShares","beneficiaryTotalShares","setBeneficiaryTotalShares","setTrackedTokens","assets","setAssets","inheritance","setInheritance","isOwner","setIsOwner","isGnosisSafeOwner","setIsGnosisSafeOwner","showTodo","setShowTodo","showEditBeneficiary","setShowEditBeneficiary","chainId","setChainId","editBeneficiaryAddress","setEditBeneficiaryAddress","editBeneficiaryShares","setEditBeneficiaryShares","isGnosisSafeRecoveryEnabled","setIsGnosisSafeRecoveryEnabled","isGnosisSafeRecoveryExecutor","setIsGnosisSafeRecoveryExecutor","ethers","utils","bigNumberify","gnosisSafeRecoveryMinimumBeneficiaries","setGnosisSafeRecoveryMinimumBeneficiaries","gnosisRecoveryFormEnabled","setGnosisRecoveryFormEnabled","gnosisRecoveryFormExecutor","setGnosisRecoveryFormExecutor","gnosisRecoveryFormMinBeneficiaries","setGnosisRecoveryFormMinBeneficiaries","gnosisRecoveryFormNewOwner","setGnosisRecoveryFormNewOwner","isDeadMansSwitchEnabled","setIsDeadMansSwitchEnabled","deadMansSwitchCheckinSeconds","setDeadMansSwitchCheckinSeconds","deadMansSwitchLastCheckin","setDeadMansSwitchLastCheckin","isDeadMansSwitchFormEnabled","setIsDeadMansSwitchFormEnabled","deadMansSwitchFormCheckinMinutes","setDeadMansSwitchFormCheckinMinutes","blockchainTimestamp","setBlockchainTimestamp","event","a","preventDefault","provider","providers","Web3Provider","ethereum","signer","getSigner","create","cpk","boydInterface","Interface","bringOutYourDeadAbi","moduleManagerInterface","gnosisModuleManagerAbi","txs","enableModuleData","functions","enableModule","encode","operation","CALL","to","disableModuleData","disableModule","executorSettingsData","setIsExecutorRequiredForSafeRecovery","beneficiarySettingsData","setBeneficiariesRequiredForSafeRecovery","safe","Contract","on","NotificationManager","success","estateContract","newValue","execTransactions","cpkHash","error","checkinSeconds","enabledData","periodData","status","handleDistributeAsset","asEther","constants","AddressZero","distributeEthShares","distributeTokenSharesAsEth","distributeTokenShares","beneficiary","token","share","refreshAssets","handleClaimAsset","claimEthShares","claimTokenSharesAsEth","claimTokenShares","getAddress","account","addBeneficiary","refreshBeneficiaries","ownerModuleInterface","gnosisOwnerManagerAbi","prevOwner","oldOwner","newOwner","swapOwnerData","swapOwner","getDataHash","dataHash","isConfirmedByRequiredParties","isConfirmedByAll","confirmTransaction","tx","wait","recoverAccess","ownerAccount","setOwnerAccount","transferOwnershipData","transferOwnership","checkinData","imNotDeadYet","gasLimit","_owner","bringOutYourDead","e","bs","b","bAddress","beneficiaryShares","bShares","shares","toString","_beneficiarySelfShares","_trackedTokens","assetAddress","trackedTokens","defaultTokens","includes","_assets","_inheritance","getBalance","wei","asset","symbol","decimals","balance","formatEther","toNumber","getBeneficiaryBalance","beneficiaryBalance","inheritAsset","erc20Contract","erc20Abi","balanceOf","formatUnits","useEffect","getNetwork","then","network","_gnosisSafe","isExecutorRequiredForSafeRecovery","executorRequired","beneficiariesRequiredForSafeRecovery","minBeneficiaries","safeOwnerManager","getModules","modules","enabled","dmsEnabed","dmsCheckinSeconds","div","dmsLastCheckin","getBlock","block","blockTimestamp","timestamp","totalShares","_beneficiaryTotalShares","shareRatio","connected","fetchData","EthereumDapp","routeSegments","path","Modal","centered","onHide","Header","closeButton","Title","Body","src","alt","Footer","Button","onClick","onSubmit","onChange","target","step","min","EthereumAddress","url","add","gt","lte","checked","placeholder","eq","moment","unix","from","key","size","map","index","toLowerCase","toFixed","Card","scope","createContext","Object","defineProperty","default","_len","arguments","validators","Array","_key","allPropTypes","_len2","args","_key2","forEach","validator","result","apply","_createChainableTypeChecker2","obj","_createChainableTypeChecker","__esModule","DEVICE_SIZES","Col","spans","classes","brkPoint","span","offset","order","propValue","_propValue$span","infix","concat","validate","checkType","isRequired","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","Error","chainedCheckType","bind","propTypes","PropTypes","string","elementType","context","_classes","plaintext","readOnly","_classes2","_classes3","_classes4","_classes5","column","srOnly","columnClass"],"mappings":"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","file":"static/js/43.cb36ec8a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  type: 'checkbox'\n};\nvar FormCheckInput = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      isStatic = _ref.isStatic,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"className\", \"isValid\", \"isInvalid\", \"isStatic\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom-control-input') : useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid', isStatic && 'position-static')\n  }));\n});\nFormCheckInput.displayName = 'FormCheckInput';\nFormCheckInput.defaultProps = defaultProps;\nexport default FormCheckInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheckLabel = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"bsCustomPrefix\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom-control-label') : useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return React.createElement(\"label\", _extends({}, props, {\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  }));\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport React, { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  type: 'checkbox',\n  inline: false,\n  disabled: false,\n  isValid: false,\n  isInvalid: false,\n  title: ''\n};\nvar FormCheck = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      inline = _ref.inline,\n      disabled = _ref.disabled,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      feedback = _ref.feedback,\n      className = _ref.className,\n      style = _ref.style,\n      title = _ref.title,\n      type = _ref.type,\n      label = _ref.label,\n      children = _ref.children,\n      propCustom = _ref.custom,\n      _ref$as = _ref.as,\n      as = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"inline\", \"disabled\", \"isValid\", \"isInvalid\", \"feedback\", \"className\", \"style\", \"title\", \"type\", \"label\", \"children\", \"custom\", \"as\"]);\n\n  var custom = type === 'switch' ? true : propCustom;\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom-control') : useBootstrapPrefix(bsPrefix, 'form-check');\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var innerFormContext = useMemo(function () {\n    return {\n      controlId: id || controlId,\n      custom: custom\n    };\n  }, [controlId, custom, id]);\n  var hasLabel = label != null && label !== false && !children;\n  var input = React.createElement(FormCheckInput, _extends({}, props, {\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    isStatic: !hasLabel,\n    disabled: disabled,\n    as: as\n  }));\n  return React.createElement(FormContext.Provider, {\n    value: innerFormContext\n  }, React.createElement(\"div\", {\n    style: style,\n    className: classNames(className, bsPrefix, custom && \"custom-\" + type, inline && bsPrefix + \"-inline\")\n  }, children || React.createElement(React.Fragment, null, input, hasLabel && React.createElement(FormCheckLabel, {\n    title: title\n  }, label), (isValid || isInvalid) && React.createElement(Feedback, {\n    type: isValid ? 'valid' : 'invalid'\n  }, feedback))));\n});\nFormCheck.displayName = 'FormCheck';\nFormCheck.defaultProps = defaultProps;\nFormCheck.Input = FormCheckInput;\nFormCheck.Label = FormCheckLabel;\nexport default FormCheck;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormFileInput = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      lang = _ref.lang,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"className\", \"isValid\", \"isInvalid\", \"lang\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  var type = 'file';\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom-file-input') : useBootstrapPrefix(bsPrefix, 'form-control-file');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    id: id || controlId,\n    type: type,\n    lang: lang,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  }));\n});\nFormFileInput.displayName = 'FormFileInput';\nexport default FormFileInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormFileLabel = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"bsCustomPrefix\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom-file-label') : useBootstrapPrefix(bsPrefix, 'form-file-label');\n  return React.createElement(\"label\", _extends({}, props, {\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix),\n    \"data-browse\": props['data-browse']\n  }));\n});\nFormFileLabel.displayName = 'FormFileLabel';\nexport default FormFileLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext, useMemo } from 'react';\nimport all from 'prop-types-extra/lib/all';\nimport Feedback from './Feedback';\nimport FormFileInput from './FormFileInput';\nimport FormFileLabel from './FormFileLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  disabled: false,\n  isValid: false,\n  isInvalid: false\n};\nvar FormFile = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      disabled = _ref.disabled,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      feedback = _ref.feedback,\n      className = _ref.className,\n      style = _ref.style,\n      label = _ref.label,\n      children = _ref.children,\n      custom = _ref.custom,\n      lang = _ref.lang,\n      dataBrowse = _ref['data-browse'],\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      _ref$inputAs = _ref.inputAs,\n      inputAs = _ref$inputAs === void 0 ? 'input' : _ref$inputAs,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"bsCustomPrefix\", \"disabled\", \"isValid\", \"isInvalid\", \"feedback\", \"className\", \"style\", \"label\", \"children\", \"custom\", \"lang\", \"data-browse\", \"as\", \"inputAs\"]);\n\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom') : useBootstrapPrefix(bsPrefix, 'form-file');\n  var type = 'file';\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var innerFormContext = useMemo(function () {\n    return {\n      controlId: id || controlId,\n      custom: custom\n    };\n  }, [controlId, custom, id]);\n  var hasLabel = label != null && label !== false && !children;\n  var input = React.createElement(FormFileInput, _extends({}, props, {\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: inputAs,\n    lang: lang\n  }));\n  return React.createElement(FormContext.Provider, {\n    value: innerFormContext\n  }, React.createElement(Component, {\n    style: style,\n    className: classNames(className, bsPrefix, custom && \"custom-\" + type)\n  }, children || React.createElement(React.Fragment, null, custom ? React.createElement(React.Fragment, null, input, hasLabel && React.createElement(FormFileLabel, {\n    \"data-browse\": dataBrowse\n  }, label)) : React.createElement(React.Fragment, null, hasLabel && React.createElement(FormFileLabel, null, label), input), (isValid || isInvalid) && React.createElement(Feedback, {\n    type: isValid ? 'valid' : 'invalid'\n  }, feedback))));\n});\nFormFile.displayName = 'FormFile';\nFormFile.defaultProps = defaultProps;\nFormFile.Input = FormFileInput;\nFormFile.Label = FormFileLabel;\nexport default FormFile;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormText = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'small' : _ref$as,\n      muted = _ref.muted,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\", \"muted\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  }));\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport FormCheck from './FormCheck';\nvar Switch = React.forwardRef(function (props, ref) {\n  return React.createElement(FormCheck, _extends({}, props, {\n    ref: ref,\n    type: \"switch\"\n  }));\n});\nSwitch.displayName = 'Switch';\nSwitch.Input = FormCheck.Input;\nSwitch.Label = FormCheck.Label;\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport FormCheck from './FormCheck';\nimport FormFile from './FormFile';\nimport FormControl from './FormControl';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar defaultProps = {\n  inline: false\n};\nvar Form = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      inline = _ref.inline,\n      className = _ref.className,\n      validated = _ref.validated,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'form' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"inline\", \"className\", \"validated\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, validated && 'was-validated', inline && bsPrefix + \"-inline\")\n  }));\n});\nForm.displayName = 'Form';\nForm.defaultProps = defaultProps;\nForm.Row = createWithBsPrefix('form-row');\nForm.Group = FormGroup;\nForm.Control = FormControl;\nForm.Check = FormCheck;\nForm.File = FormFile;\nForm.Switch = Switch;\nForm.Label = FormLabel;\nForm.Text = FormText;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","const erc20 = [\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_value\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_value\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_owner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"balance\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_value\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"constant\": true,\r\n        \"inputs\": [\r\n            {\r\n                \"name\": \"_owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"name\": \"_spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"payable\": true,\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"fallback\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"value\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"name\": \"value\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    }\r\n];\r\n\r\nmodule.exports = erc20;\r\n","const gnosisModuleManagerAbi = [\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"contract Module\",\r\n\t\t\t\t\"name\": \"module\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"DisabledModule\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"contract Module\",\r\n\t\t\t\t\"name\": \"module\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"EnabledModule\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"module\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ExecutionFromModuleFailure\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"module\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ExecutionFromModuleSuccess\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"contract Module\",\r\n\t\t\t\t\"name\": \"prevModule\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"contract Module\",\r\n\t\t\t\t\"name\": \"module\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"disableModule\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"contract Module\",\r\n\t\t\t\t\"name\": \"module\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"enableModule\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"enum Enum.Operation\",\r\n\t\t\t\t\"name\": \"operation\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"execTransactionFromModule\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"success\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"value\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"enum Enum.Operation\",\r\n\t\t\t\t\"name\": \"operation\",\r\n\t\t\t\t\"type\": \"uint8\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"execTransactionFromModuleReturnData\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"success\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"returnData\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getModules\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"start\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"pageSize\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getModulesPaginated\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address[]\",\r\n\t\t\t\t\"name\": \"array\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"next\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n\r\nmodule.exports = gnosisModuleManagerAbi;\r\n","const gnosisOwnerManagerAbi = [\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"AddedOwner\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"threshold\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ChangedThreshold\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"RemovedOwner\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_threshold\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addOwnerWithThreshold\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_threshold\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"changeThreshold\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getOwners\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getThreshold\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": true,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isOwner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"prevOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_threshold\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"removeOwner\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"constant\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"prevOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"oldOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"swapOwner\",\r\n\t\t\"outputs\": [],\r\n\t\t\"payable\": false,\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n];\r\n\r\nmodule.exports = gnosisOwnerManagerAbi;\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\nconst PieChart = ({data, height = \"260px\", name=\"\", color = []}) => {\r\n    if (color.length === 0) {\r\n        // TODO: Add more default colors\r\n        color = [\"#62549c\", \"#7566b5\", \"#7d6cbb\", \"#8877bd\", \"#9181bd\", \"#6957af\"];\r\n    }\r\n    const option = {\r\n        color: color,\r\n        tooltip: {\r\n            show: true,\r\n            backgroundColor: \"rgba(0, 0, 0, .8)\"\r\n        },\r\n\r\n        series: [\r\n            {\r\n                name: name,\r\n                type: \"pie\",\r\n                radius: \"60%\",\r\n                center: [\"50%\", \"50%\"],\r\n                // data: [\r\n                //   { value: 535, name: \"USA\" },\r\n                //   { value: 310, name: \"Brazil\" },\r\n                //   { value: 234, name: \"France\" },\r\n                //   { value: 155, name: \"BD\" },\r\n                //   { value: 130, name: \"UK\" },\r\n                //   { value: 348, name: \"India\" }\r\n                // ],\r\n                data: data,\r\n                itemStyle: {\r\n                    emphasis: {\r\n                        shadowBlur: 10,\r\n                        shadowOffsetX: 0,\r\n                        shadowColor: \"rgba(0, 0, 0, 0.5)\"\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    return <ReactEcharts style={{height: height}} option={option}/>;\r\n};\r\n\r\nexport default PieChart;\r\n","import React, {useState, Fragment, useEffect} from \"react\";\r\nimport {Breadcrumb, SimpleCard, CodeViewer} from \"@gull\";\r\nimport {useWallet} from \"use-wallet\";\r\nimport EthereumDapp from \"./EthereumDapp\";\r\nimport {Badge, Card} from \"react-bootstrap\";\r\nimport {Form, Modal, Button} from \"react-bootstrap\";\r\nimport {ethers} from 'ethers';\r\nimport bringOutYourDeadAbi from \"../../../abi/bringOutYourDeadAbi\";\r\nimport erc20Abi from \"../../../abi/erc20\";\r\nimport gnosisModuleManagerAbi from \"../../../abi/gnosisModuleManagerAbi\";\r\nimport gnosisOwnerManagerAbi from \"../../../abi/gnosisOwnerManagerAbi\";\r\nimport EthereumAddress from './EthereumAddress';\r\nimport localStorageService from \"../../services/localStorageService\";\r\nimport PieChart from \"./PieChart\";\r\n// import bringOutYourDeadFactoryAbi from \"../../../abi/bringOutYourDeadFactoryAbi\";\r\nimport {NotificationManager} from \"react-notifications\";\r\nimport moment from \"moment\";\r\n\r\n// Gnosis Proxy Kit\r\nconst CPK = require('contract-proxy-kit');\r\n\r\n// Sentinal address is used on ends of Gnosis Safe linked lists\r\nconst SENTINAL_ADDRESS = \"0x0000000000000000000000000000000000000001\";\r\n\r\nfunction BeneficiaryPieChart({beneficiaries, name = \"Beneficiary Shares\"}) {\r\n    console.log(beneficiaries);\r\n    let data = [];\r\n    for (let i = 0; i < beneficiaries.length; i++) {\r\n        data.push({name: beneficiaries[i]['address'], value: beneficiaries[i]['shares']})\r\n    }\r\n    return (\r\n        <PieChart data={data} name={name} />\r\n    );\r\n}\r\n\r\n\r\nfunction EditExecutor(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [executor, setExecutor] = useState(props.executor);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    // TODO: Finish handling executor updates\r\n    return (\r\n        <Fragment>\r\n            <Button className=\"text-capitalize\" onClick={() => setShow(true)}>\r\n                Edit\r\n            </Button>\r\n            <Modal show={show} onHide={() => handleClose()} {...props}>\r\n                <form>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Change Executor</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <p>\r\n                            Address of the executor for the estate ({executor})\r\n                        </p>\r\n                        <input type=\"text\" name=\"executorInput\" value={executor}\r\n                               onChange={(event) => setExecutor(event.target.value)} className=\"form-control\"/>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => handleClose()}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={() => alert(executor)}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </form>\r\n            </Modal>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nfunction DappEstate(props) {\r\n    const wallet = useWallet();\r\n    const [estateAddress, setEstateAddress] = useState(() => {\r\n        if (props.match.params.address !== undefined) {\r\n            localStorageService.setItem('estate', props.match.params.address);\r\n            return props.match.params.address;\r\n        }\r\n        let storedEstate = localStorageService.getItem('estate');\r\n        if (storedEstate !== null) {\r\n            return storedEstate;\r\n        }\r\n        return '';\r\n    });\r\n    const [owner, setOwner] = useState('');\r\n    const [executor, setExecutor] = useState('');\r\n    const [gnosisSafe, setGnosisSafe] = useState('');\r\n    const [liveliness, setLiveliness] = useState(0);\r\n    const [beneficiaries, setBeneficiaries] = useState(null);\r\n    const [beneficiarySelfShares, setBeneficiarySelfShares] = useState(0);\r\n    const [beneficiaryTotalShares, setBeneficiaryTotalShares] = useState(0);\r\n    const [trackedTokens, setTrackedTokens] = useState([]);\r\n    const [assets, setAssets] = useState([]);\r\n    const [inheritance, setInheritance] = useState(null);\r\n    const [isOwner, setIsOwner] = useState(false);\r\n    const [isGnosisSafeOwner, setIsGnosisSafeOwner] = useState(false);\r\n    const [showTodo, setShowTodo] = useState(false);\r\n    const [showEditBeneficiary, setShowEditBeneficiary] = useState(false);\r\n    const [chainId, setChainId] = useState(1);\r\n    const [editBeneficiaryAddress, setEditBeneficiaryAddress] = useState('');\r\n    const [editBeneficiaryShares, setEditBeneficiaryShares] = useState('');\r\n    const [isGnosisSafeRecoveryEnabled, setIsGnosisSafeRecoveryEnabled] = useState(false);\r\n    const [isGnosisSafeRecoveryExecutor, setIsGnosisSafeRecoveryExecutor] = useState(false);\r\n    const [gnosisSafeRecoveryMinimumBeneficiaries, setGnosisSafeRecoveryMinimumBeneficiaries] = useState(ethers.utils.bigNumberify(0));\r\n    const [gnosisRecoveryFormEnabled, setGnosisRecoveryFormEnabled] = useState(false);\r\n    const [gnosisRecoveryFormExecutor, setGnosisRecoveryFormExecutor] = useState(false);\r\n    const [gnosisRecoveryFormMinBeneficiaries, setGnosisRecoveryFormMinBeneficiaries] = useState('');\r\n    const [gnosisRecoveryFormNewOwner, setGnosisRecoveryFormNewOwner] = useState('');\r\n    const [isDeadMansSwitchEnabled, setIsDeadMansSwitchEnabled] = useState(false);\r\n    const [deadMansSwitchCheckinSeconds, setDeadMansSwitchCheckinSeconds] = useState(0);\r\n    const [deadMansSwitchLastCheckin, setDeadMansSwitchLastCheckin] = useState(ethers.utils.bigNumberify(0));\r\n    const [isDeadMansSwitchFormEnabled, setIsDeadMansSwitchFormEnabled] = useState(false);\r\n    // const [deadMansSwitchFormCheckinSeconds, setDeadMansSwitchFormCheckinSeconds] = useState(0);\r\n    const [deadMansSwitchFormCheckinMinutes, setDeadMansSwitchFormCheckinMinutes] = useState(0);\r\n    const [blockchainTimestamp, setBlockchainTimestamp] = useState(ethers.utils.bigNumberify(0));\r\n\r\n    async function handleUpdateGnosisSafeRecovery(event) {\r\n        event.preventDefault();\r\n        let provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n        const signer = provider.getSigner(0);\r\n        const cpk = await CPK.create({ethers, signer: signer});\r\n\r\n        // Prepare calldata for multi-transaction call to Gnosis Safe by way of Contract Proxy Kit\r\n        const boydInterface = new ethers.utils.Interface(bringOutYourDeadAbi);\r\n        const moduleManagerInterface = new ethers.utils.Interface(gnosisModuleManagerAbi);\r\n\r\n        let txs = [];\r\n        if(gnosisRecoveryFormEnabled && !isGnosisSafeRecoveryEnabled) {\r\n            // Enable estate to serve as a recovery module for gnosis safe\r\n            let enableModuleData = moduleManagerInterface.functions.enableModule.encode([estateAddress]);\r\n            txs.push({\r\n                operation: CPK.CALL,\r\n                to: gnosisSafe,\r\n                value: 0,\r\n                data: enableModuleData\r\n            });\r\n        } else if(!gnosisRecoveryFormEnabled && isGnosisSafeRecoveryEnabled) {\r\n            // Disable estate from serving as a recovery module for gnosis safe\r\n            // NOTE: Currently making the unsafe assumption that no other recovery modules are present on the gnosis safe\r\n            // TODO: Use moduleManagerInterface.functions.getModules() or .getModulesPaginated(address,uint256) to determine the correct linked list target\r\n            let disableModuleData = moduleManagerInterface.functions.disableModule.encode([SENTINAL_ADDRESS, estateAddress]);\r\n            txs.push({\r\n                operation: CPK.CALL,\r\n                to: gnosisSafe,\r\n                value: 0,\r\n                data: disableModuleData\r\n            });\r\n        }\r\n\r\n        const executorSettingsData = boydInterface.functions.setIsExecutorRequiredForSafeRecovery.encode([gnosisRecoveryFormExecutor]);\r\n        const beneficiarySettingsData = boydInterface.functions.setBeneficiariesRequiredForSafeRecovery.encode([gnosisRecoveryFormMinBeneficiaries]);\r\n\r\n        txs.push({\r\n            operation: CPK.CALL,\r\n            to: estateAddress,\r\n            value: 0,\r\n            data: executorSettingsData\r\n        });\r\n\r\n        txs.push({\r\n            operation: CPK.CALL,\r\n            to: estateAddress,\r\n            value: 0,\r\n            data: beneficiarySettingsData\r\n        });\r\n\r\n        // Listen for events and update accordingly\r\n        const safe = new ethers.Contract(gnosisSafe, gnosisModuleManagerAbi, signer);\r\n        safe.on(\"EnabledModule\", async (event) => {\r\n            setIsGnosisSafeRecoveryEnabled(true);\r\n            console.log(\"Module enabled\");\r\n            NotificationManager.success(\r\n                \"The Estate Recovery Module has been enabled on your Gnosis Safe\",\r\n                \"Module Enabled\"\r\n            );\r\n        });\r\n        safe.on(\"DisabledModule\", async (event) => {\r\n            setIsGnosisSafeRecoveryEnabled(false);\r\n            console.log(\"Module disabled\");\r\n            NotificationManager.success(\r\n                \"The Estate Recovery Module has been disabled on your Gnosis Safe\",\r\n                \"Module Disabled\"\r\n            );\r\n        });\r\n\r\n        let estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n        estateContract.on(\"BeneficiariesRequiredForSafeRecoveryChanged\", async (newValue, event) => {\r\n            setGnosisSafeRecoveryMinimumBeneficiaries(newValue);\r\n            console.log(\"Beneficiaries required updated: \", newValue);\r\n            NotificationManager.success(\r\n                \"The number of beneficiaries required to recovery your Gnosis Safe has been updated.\",\r\n                \"Settings Updated\"\r\n            );\r\n        });\r\n        estateContract.on(\"IsExecutorRequiredForSafeRecoveryChanged\", async (newValue, event) => {\r\n            setIsGnosisSafeRecoveryExecutor(newValue);\r\n            console.log(\"Is executor required updated: \", newValue);\r\n            NotificationManager.success(\r\n                \"The executor requirement for recovering your Gnosis Safe has been updated.\",\r\n                \"Settings Updated\"\r\n            );\r\n        });\r\n\r\n        // Send multi-TX through Gnosis Safe\r\n        try {\r\n            let cpkHash = await cpk.execTransactions(txs);\r\n            console.log(cpkHash);\r\n        } catch (e) {\r\n            console.log(\"Error sending multi-TX through Gnosis Safe\", e);\r\n            NotificationManager.error(\r\n                \"There was a problem transacting through Gnosis Safe.\",\r\n                \"Error sending transaction\"\r\n            );\r\n        }\r\n    }\r\n\r\n    async function handleUpdateDeadMansSwitch(event) {\r\n        event.preventDefault();\r\n        let provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n        const signer = provider.getSigner(0);\r\n        // NOTE: The CPK makes incorrect assumptions about the address of the Gnosis Safe if the owner has changed\r\n        const cpk = await CPK.create({ethers, signer: signer});\r\n\r\n        // Prepare calldata for multi-transaction call to Gnosis Safe by way of Contract Proxy Kit\r\n        const boydInterface = new ethers.utils.Interface(bringOutYourDeadAbi);\r\n        let txs = [];\r\n        const checkinSeconds = deadMansSwitchFormCheckinMinutes > 0 ? deadMansSwitchFormCheckinMinutes * 60 : 0;\r\n        const enabledData = boydInterface.functions.setIsDeadMansSwitchEnabled.encode([isDeadMansSwitchFormEnabled]);\r\n        const periodData = boydInterface.functions.setDeadMansSwitchCheckinSeconds.encode([checkinSeconds]);\r\n\r\n        txs.push({\r\n            operation: CPK.CALL,\r\n            to: estateAddress,\r\n            value: 0,\r\n            data: enabledData\r\n        });\r\n\r\n        txs.push({\r\n            operation: CPK.CALL,\r\n            to: estateAddress,\r\n            value: 0,\r\n            data: periodData\r\n        });\r\n\r\n        // Listen for events and update accordingly\r\n        let estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n        estateContract.on(\"DeadMansSwitchCheckinSecondsChanged\", async (newValue, event) => {\r\n            setDeadMansSwitchCheckinSeconds(newValue);\r\n            console.log(\"DeadMansSwitchCheckinSecondsChanged: \", newValue);\r\n            NotificationManager.success(\r\n                \"The dead man's switch check-in period has been updated.\",\r\n                \"Settings Updated\"\r\n            );\r\n        });\r\n        estateContract.on(\"IsDeadMansSwitchEnabledChanged\", async (newValue, event) => {\r\n            setIsDeadMansSwitchEnabled(newValue);\r\n            console.log(\"IsDeadMansSwitchEnabledChanged: \", newValue);\r\n            const status = newValue ? 'enabled' : 'disabled';\r\n            NotificationManager.success(\r\n                \"The dead man's switch has been \" + status + \".\",\r\n                \"Settings Updated\"\r\n            );\r\n        });\r\n\r\n        // Send multi-TX through Gnosis Safe\r\n        try {\r\n            let cpkHash = await cpk.execTransactions(txs);\r\n            console.log(cpkHash);\r\n        } catch (e) {\r\n            console.log(\"Error updating dead man's switch settings with multi-TX through Gnosis Safe\", e);\r\n            NotificationManager.error(\r\n                \"There was a problem transacting through Gnosis Safe.\",\r\n                \"Error sending transaction\"\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async function handleDistributeAsset(event, address, asEther) {\r\n        event.preventDefault();\r\n        let provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n        const signer = provider.getSigner(0);\r\n        let estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n\r\n        // TODO: Track down possible error with executor distributing payments after a beneficiary has claimed shares!\r\n\r\n        try {\r\n            console.log(event);\r\n            if(address === ethers.constants.AddressZero) {\r\n                await estateContract.distributeEthShares();\r\n            } else {\r\n                if(asEther) {\r\n                    await estateContract.distributeTokenSharesAsEth(address);\r\n                } else {\r\n                    await estateContract.distributeTokenShares(address);\r\n                }\r\n            }\r\n            estateContract.on(\"BeneficiaryWithdrawal\", async (beneficiary, token, share, event) => {\r\n                console.log(\"Distribution to a beneficiary detected\");\r\n                // TODO: More verbose message?\r\n                NotificationManager.success(\r\n                    \"Distributed asset to beneficiary\",\r\n                    \"Asset distributed\"\r\n                );\r\n                refreshAssets()\r\n            })\r\n        } catch (e) {\r\n            console.log(\"ERROR while waiting for asset distribution transaction to complete\", e);\r\n            NotificationManager.error(\r\n                \"There was a problem distributing asset to beneficiaries.\",\r\n                \"Error sending transaction\"\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async function handleClaimAsset(event, address, asEther) {\r\n        event.preventDefault();\r\n\r\n        let provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n        const signer = provider.getSigner(0);\r\n        let estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n        try {\r\n            console.log(event);\r\n            if(address === ethers.constants.AddressZero) {\r\n                await estateContract.claimEthShares();\r\n            } else {\r\n                if(asEther) {\r\n                    await estateContract.claimTokenSharesAsEth(address);\r\n                } else {\r\n                    await estateContract.claimTokenShares(address);\r\n                }\r\n            }\r\n            estateContract.on(\"BeneficiaryWithdrawal\", async (beneficiary, token, share, event) => {\r\n                console.log(\"Distribution to a beneficiary detected\");\r\n                // TODO: More verbose message?\r\n                if(ethers.utils.getAddress(beneficiary) === wallet.account) {\r\n                    NotificationManager.success(\r\n                        \"Successfully claimed share of asset.\",\r\n                        \"Asset Claimed\"\r\n                    );\r\n                }\r\n                refreshAssets();\r\n            })\r\n        } catch (e) {\r\n            console.log(\"ERROR while waiting for inheritance claim transaction to complete\", e);\r\n            NotificationManager.error(\r\n                \"There was a problem claiming share of inheritance.\",\r\n                \"Error sending transaction\"\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async function handleAddBeneficiary(event) {\r\n        event.preventDefault();\r\n        // TODO: Form validation\r\n        let provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n        const signer = provider.getSigner(0);\r\n        let estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n        try {\r\n            await estateContract.addBeneficiary(editBeneficiaryAddress, editBeneficiaryShares);\r\n            setShowEditBeneficiary(false);\r\n            setEditBeneficiaryShares('');\r\n            setEditBeneficiaryAddress('');\r\n            // Listen for beneficiary added event and then refresh\r\n            estateContract.on(\"AddedBeneficiary\", async (event) => {\r\n                console.log('Beneficiary added');\r\n                NotificationManager.success(\r\n                    \"Beneficiary added to estate.\",\r\n                    \"Success\"\r\n                );\r\n                refreshBeneficiaries();\r\n            });\r\n        } catch (e) {\r\n            console.log(\"ERROR while waiting for addBeneficiary transaction to complete\", e);\r\n            NotificationManager.error(\r\n                \"There was a problem addint the beneficiary.\",\r\n                \"Error sending transaction\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    async function handleRecoverGnosisSafe(event) {\r\n        event.preventDefault();\r\n        const provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n        const signer = provider.getSigner(0);\r\n        const estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n\r\n        // Get calldata for OwnerManager.swapOwner(address prevOwner, address oldOwner, address newOwner)\r\n        // Naively assuming there is currently only own owner of the Gnosis Safe\r\n        // TODO: Support Gnosis Safe with multiple owners\r\n        const ownerModuleInterface = new ethers.utils.Interface(gnosisOwnerManagerAbi);\r\n        const prevOwner = SENTINAL_ADDRESS;\r\n        const oldOwner = owner;\r\n        // const newOwner = owner;  // TODO: pull newOwner from recovery form state\r\n        const newOwner = gnosisRecoveryFormNewOwner;\r\n        const swapOwnerData = ownerModuleInterface.functions.swapOwner.encode([prevOwner, oldOwner, newOwner]);\r\n        console.log(\"swapOwnerData: \", swapOwnerData);\r\n        const dataHash = await estateContract.getDataHash(swapOwnerData);\r\n        console.log(\"dataHash: \", dataHash);\r\n\r\n        // Check if the recovery conditions have been met already\r\n        let isConfirmedByAll = await estateContract.isConfirmedByRequiredParties(dataHash);\r\n        console.log(\"isConfirmedByAll: \", isConfirmedByAll);\r\n\r\n        if(!isConfirmedByAll) {\r\n            // Call estateContract.confirmTransaction(dataHash) with the hash of the swapOwner calldata\r\n            try {\r\n                let tx = await estateContract.confirmTransaction(dataHash);\r\n                await tx.wait(1);\r\n                NotificationManager.success(\r\n                    \"Recovery confirmation successfully submitted.\",\r\n                    \"Confirmation Received\"\r\n                );\r\n\r\n            } catch (e) {\r\n                console.log(\"ERROR while waiting for transaction to complete\", e);\r\n                NotificationManager.error(\r\n                    \"There was a problem confirming recovery operation.\",\r\n                    \"Error sending transaction\"\r\n                );\r\n                return;\r\n            }\r\n\r\n            // Check if the recovery conditions have been met now\r\n            isConfirmedByAll = await estateContract.isConfirmedByRequiredParties(dataHash);\r\n            console.log(\"isConfirmedByAll: \", isConfirmedByAll);\r\n        }\r\n\r\n        // Call estateContract.recoverAccess(address prevOwner, address oldOwner, address newOwner) to finalize the account recovery\r\n        if(isConfirmedByAll) {\r\n            // Listen for ownerModuleInterface.AddedOwner(newOwner) event from Gnosis Safe, alert user on success\r\n            const safe = new ethers.Contract(gnosisSafe, gnosisOwnerManagerAbi, signer);\r\n            safe.on(\"AddedOwner\", async (event) => {\r\n                console.log(\"Gnosis Safe owner added\");\r\n                NotificationManager.success(\r\n                    \"Estate and Gnosis Safe have been successfully recovered to new wallet\",\r\n                    \"Recovery Successful\"\r\n                );\r\n                // TODO: Refresh estate owner? No, that's premature, gnosis safe has chagned ownership, but not estate yet\r\n            });\r\n\r\n            try {\r\n                await estateContract.recoverAccess(prevOwner, oldOwner, newOwner);\r\n            } catch (e) {\r\n                console.log(\"ERROR while waiting for transaction to complete\", e);\r\n                NotificationManager.error(\r\n                    \"There was a problem finalizing the recovery operation.\",\r\n                    \"Error sending transaction\"\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    async function handleRecoverEstate(event) {\r\n        event.preventDefault();\r\n        const provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n        const signer = provider.getSigner(0);\r\n        const estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n\r\n        // NOTE: This might only the first time the Estate is recovered. Subsequent recoveries will use a different\r\n        //       old owner address and incorrectly calculate the Gnosis Safe address.  The Gnosis Safe address is\r\n        //       saved on the Estate contract, but unclear how to force CPK to use it without knowing original owner\r\n        // NOTE: One solution would simply be to interact directly with Gnosis Safe and not use the CPK for this TX\r\n        // TODO: Explore risk this technique will only work for first recovery\r\n        // Initialize Gnosis Contract Proxy Kit using old owner address, to correctly generate Gnosis Safe address\r\n        const cpk = await CPK.create({ethers, signer: signer, ownerAccount: owner});\r\n        // console.log(\"cpk\", cpk);\r\n        // Set current wallet address in Gnosis Contract Proxy Kit so it can interact with the Gnosis Safe correctly\r\n        cpk.setOwnerAccount(wallet.account);\r\n        // console.log(\"cpk\", cpk);\r\n\r\n        // Prepare calldata for multi-transaction call to Gnosis Safe through Contract Proxy Kit\r\n        const boydInterface = new ethers.utils.Interface(bringOutYourDeadAbi);\r\n        // Transfer ownership to self\r\n        const transferOwnershipData = boydInterface.functions.transferOwnership.encode([wallet.account]);\r\n        // Check-in as alive\r\n        const checkinData = boydInterface.functions.imNotDeadYet.encode([]);\r\n\r\n        let txs = [\r\n            {\r\n                operation: CPK.CALL,\r\n                to: estateAddress,\r\n                value: 0,\r\n                data: transferOwnershipData\r\n            },\r\n            {\r\n                operation: CPK.CALL,\r\n                to: estateAddress,\r\n                value: 0,\r\n                data: checkinData\r\n            },\r\n        ];\r\n\r\n        // Send multi-TX through Gnosis Safe\r\n        try {\r\n            let cpkHash = await cpk.execTransactions(txs, {gasLimit: 5000000});\r\n            console.log(\"cpkHash: \", cpkHash);\r\n            NotificationManager.success(\r\n                \"Estate and Gnosis Safe have been successfully recovered to new wallet\",\r\n                \"Recovery Successful\"\r\n            );\r\n\r\n            // Refresh owner from estateContract\r\n            let _owner = await estateContract.owner();\r\n            setOwner(_owner);\r\n            setIsOwner(_owner === wallet.account);\r\n        } catch (e) {\r\n            console.log(\"Error sending multi-tx through Gnosis Safe: \", e);\r\n                NotificationManager.error(\r\n                    \"There was a problem finalizing the recovery operation.\",\r\n                    \"Error sending transaction\"\r\n                );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async function handleBringOutYourDead(event) {\r\n        event.preventDefault();\r\n        const provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n        const signer = provider.getSigner(0);\r\n        const estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n\r\n        try {\r\n            await estateContract.bringOutYourDead();\r\n            // Listen for event and then refresh\r\n            estateContract.on(\"ConfirmationOfDeath\", async (event) => {\r\n                console.log('ConfirmationOfDeath');\r\n                NotificationManager.success(\r\n                    \"We are sorry for your loss.\",\r\n                    \"Condolences\"\r\n                );\r\n                // Update liveliness\r\n                setLiveliness(await estateContract.liveliness());\r\n            });\r\n        } catch (e) {\r\n            console.log(\"ERROR while calling bringOutYourDead\", e);\r\n            NotificationManager.error(\r\n                \"There was a problem submitting confirmation of death.\",\r\n                \"Error sending transaction\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    async function handleImNotDeadYet(event) {\r\n        event.preventDefault();\r\n        const provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n        const signer = provider.getSigner(0);\r\n        const estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n\r\n        try {\r\n            await estateContract.imNotDeadYet();\r\n            // Listen for event and then refresh\r\n            estateContract.on(\"ConfirmationOfLife\", async (event) => {\r\n                console.log('ConfirmationOfLife');\r\n                NotificationManager.success(\r\n                    \"Check-in successful, dead man's switch countdown restarted.\",\r\n                    \"Success\"\r\n                );\r\n                // Update time since last check-in\r\n                setDeadMansSwitchLastCheckin(await estateContract.deadMansSwitchLastCheckin());\r\n            });\r\n        } catch (e) {\r\n            console.log(\"ERROR while checking in\", e);\r\n            NotificationManager.error(\r\n                \"There was a problem checking-in with the dead man's switch.\",\r\n                \"Error sending transaction\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    async function refreshBeneficiaries() {\r\n        const provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n        const signer = provider.getSigner(0);\r\n        let estateContract;\r\n        try {\r\n            estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n        } catch (e) {\r\n            console.log(\"ERROR while refreshing beneficiaries\");\r\n            console.log(e);\r\n        }\r\n        // Load beneficiary details. NOTE: estateContract.getBeneficiaryDetails() is misbehaving currently(?), so doing this\r\n        let bs = [];\r\n        let b = null;\r\n        let bAddress;\r\n        let bShares;\r\n        // let _totalBeneficiaryShares = 0;\r\n        do {\r\n            try {\r\n                console.log(\"Try b: \" + bs.length);\r\n                bAddress = await estateContract.beneficiaries(bs.length);\r\n                bShares = await estateContract.beneficiaryShares(bAddress);\r\n                b = {address: bAddress, shares: bShares.toString()};\r\n                bs.push(b);\r\n                // _totalBeneficiaryShares += bShares.toNumber();\r\n            } catch (e) {\r\n                b = null;\r\n            }\r\n        } while (b !== null);\r\n        setBeneficiaries(bs);\r\n        // setBeneficiaryTotalShares(_totalBeneficiaryShares);\r\n        console.log(bs);\r\n    }\r\n\r\n    async function refreshAssets(_beneficiarySelfShares) {\r\n        const provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n        const signer = provider.getSigner(0);\r\n        let estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n        // Determine tracked assets\r\n        let _trackedTokens = [];\r\n        let assetAddress = null;\r\n        do {\r\n            try {\r\n                assetAddress = await estateContract.trackedTokens(_trackedTokens.length);\r\n                _trackedTokens.push(assetAddress);\r\n            } catch (e) {\r\n                assetAddress = null\r\n            }\r\n        } while (assetAddress !== null);\r\n\r\n        // Track some tokens automatically\r\n        let defaultTokens = [\r\n            \"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa\",  // KOVAN Dai\r\n            \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",  // Mainnet Dai\r\n            \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",  // Mainnet Compound Dai\r\n            \"0x61eB5a373c4Ec78523602583c049d8563d2C7BCD\",  // KOKAN Chainlink\r\n        ];\r\n\r\n        for (let i = 0; i < defaultTokens.length; i++) {\r\n            if (!_trackedTokens.includes(defaultTokens[i])) {\r\n                _trackedTokens.push(defaultTokens[i]);\r\n            }\r\n\r\n        }\r\n        setTrackedTokens(_trackedTokens);\r\n\r\n        // Load assets\r\n        let _assets = [];\r\n        let _inheritance = [];\r\n\r\n        // Get ETH balance\r\n        try {\r\n            let wei = await provider.getBalance(estateAddress);\r\n            let asset = {\r\n                symbol: 'ETH',\r\n                name: 'Ether',\r\n                address: ethers.constants.AddressZero,\r\n                decimals: 18,\r\n                balance: ethers.utils.formatEther(wei),\r\n            };\r\n            _assets.push(asset);\r\n            // Track personal shares if a beneficiary\r\n            if (_beneficiarySelfShares.toNumber() > 0) {\r\n                let beneficiaryBalance = await estateContract.getBeneficiaryBalance(wallet.account, ethers.constants.AddressZero);\r\n                let inheritAsset = {\r\n                    symbol: asset['symbol'],\r\n                    name: asset['name'],\r\n                    address: asset['address'],\r\n                    decimals: asset['decimals'],\r\n                    // balance: (asset['balance'] * shareRatio).toFixed(4),\r\n                    balance: ethers.utils.formatEther(beneficiaryBalance),\r\n                };\r\n                _inheritance.push(inheritAsset);\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Failed retrieving asset balances\");\r\n        }\r\n\r\n        // Get balances of all tracked ERC20 tokens\r\n        let erc20Contract;\r\n        for (let i = 0; i < _trackedTokens.length; i++) {\r\n            console.log(\"Attempting to load details for asset #\" + i + \": \" + _trackedTokens[i]);\r\n            try {\r\n                erc20Contract = new ethers.Contract(_trackedTokens[i], erc20Abi, signer);\r\n                let decimals = await erc20Contract.decimals();\r\n                let wei = await erc20Contract.balanceOf(estateAddress);\r\n                let asset = {\r\n                    symbol: await erc20Contract.symbol(),\r\n                    name: await erc20Contract.name(),\r\n                    address: _trackedTokens[i],\r\n                    decimals: decimals,\r\n                    balance: ethers.utils.formatUnits(wei, decimals),\r\n                };\r\n                _assets.push(asset);\r\n                console.log(\"Asset: \", asset);\r\n                console.log(\"Wei: \", wei);\r\n                // Track personal shares if a beneficiary\r\n                if (_beneficiarySelfShares.toNumber() > 0) {\r\n                    let beneficiaryBalance = await estateContract.getBeneficiaryBalance(wallet.account, asset['address']);\r\n                    let inheritAsset = {\r\n                        symbol: asset['symbol'],\r\n                        name: asset['name'],\r\n                        address: asset['address'],\r\n                        decimals: asset['decimals'],\r\n                        // balance: (asset['balance'] * shareRatio).toFixed(4),\r\n                        balance: ethers.utils.formatUnits(beneficiaryBalance, decimals),\r\n                    };\r\n                    console.log(\"InheritAsset: \", inheritAsset);\r\n                    _inheritance.push(inheritAsset);\r\n                }\r\n            } catch (e) {\r\n                console.log(\"Failed loading asset #\" + i);\r\n            }\r\n        }\r\n        setAssets(_assets);\r\n        setInheritance(_inheritance);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n\r\n            const provider = new ethers.providers.Web3Provider(wallet.ethereum);\r\n            const signer = provider.getSigner(0);\r\n\r\n            provider.getNetwork().then((network) => {\r\n                setChainId(network.chainId)\r\n            });\r\n\r\n            let estateContract;\r\n            let _gnosisSafe = null;\r\n            try {\r\n                estateContract = new ethers.Contract(estateAddress, bringOutYourDeadAbi, signer);\r\n                console.log(estateContract);\r\n                let _owner = await estateContract.owner();\r\n                setOwner(_owner);\r\n                setIsOwner(_owner === wallet.account);\r\n                setExecutor(await estateContract.executor());\r\n                setLiveliness(await estateContract.liveliness());\r\n                _gnosisSafe = await estateContract.gnosisSafe();\r\n                setGnosisSafe(_gnosisSafe);\r\n\r\n                let executorRequired = await estateContract.isExecutorRequiredForSafeRecovery();\r\n                setIsGnosisSafeRecoveryExecutor(executorRequired);\r\n                setGnosisRecoveryFormExecutor(executorRequired);\r\n                console.log(\"Executor required: \", executorRequired);\r\n\r\n                let minBeneficiaries = await estateContract.beneficiariesRequiredForSafeRecovery();\r\n                setGnosisSafeRecoveryMinimumBeneficiaries(minBeneficiaries);\r\n                setGnosisRecoveryFormMinBeneficiaries(minBeneficiaries);\r\n                console.log(\"Minimum beneficiaries: \", minBeneficiaries);\r\n            } catch (e) {\r\n                console.log(\"Failed while fetching estate details\");\r\n                return;\r\n            }\r\n\r\n            if(_gnosisSafe !== null && _gnosisSafe !== ethers.constants.AddressZero) {\r\n                const safe = new ethers.Contract(_gnosisSafe, gnosisModuleManagerAbi, signer);\r\n                // Check if current user is an owner of the Gnosis Safe\r\n                const safeOwnerManager = new ethers.Contract(_gnosisSafe, gnosisOwnerManagerAbi, signer);\r\n                setIsGnosisSafeOwner(await safeOwnerManager.isOwner(wallet.account));\r\n                // Determine if Gnosis Safe Estate Recovery Module is enabled in Gnosis Safe\r\n                const modules = await safe.getModules();\r\n                console.log(\"Modules\", modules);\r\n                let enabled = false;\r\n                if(modules.length > 0) {\r\n                    if(modules.length === 10) {\r\n                        // TODO: Handle situation where there may be more than 10 modules (getModules() only returns first 10)\r\n                        //       Will have to use ModuleManager.getModulesPaginated(...)\r\n                        console.log(\"Modules list has 10 entries, possibility of this contract being past end of list\")\r\n                    }\r\n                    for (let i = 0; i < modules.length; i++) {\r\n                        if(ethers.utils.getAddress(modules[i]) === ethers.utils.getAddress(estateAddress)) {\r\n                            enabled = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (enabled) {\r\n                        setIsGnosisSafeRecoveryEnabled(true);\r\n                        setGnosisRecoveryFormEnabled(true);\r\n                    } else {\r\n                        setIsGnosisSafeRecoveryEnabled(false);\r\n                        setGnosisRecoveryFormEnabled(false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Load Dead Man's Switch settings from estate\r\n            const dmsEnabed = await estateContract.isDeadMansSwitchEnabled();\r\n            setIsDeadMansSwitchEnabled(dmsEnabed);\r\n            setIsDeadMansSwitchFormEnabled(dmsEnabed);\r\n\r\n            const dmsCheckinSeconds = await estateContract.deadMansSwitchCheckinSeconds();\r\n            setDeadMansSwitchCheckinSeconds(dmsCheckinSeconds);\r\n            setDeadMansSwitchFormCheckinMinutes(dmsCheckinSeconds.div(60));\r\n\r\n            const dmsLastCheckin = await estateContract.deadMansSwitchLastCheckin();\r\n            setDeadMansSwitchLastCheckin(dmsLastCheckin);\r\n\r\n            // Determine current on-chain timestamp for comparing to dead man's switch\r\n            const block = await provider.getBlock();\r\n            const blockTimestamp = ethers.utils.bigNumberify(block.timestamp);\r\n\r\n            setBlockchainTimestamp(blockTimestamp);\r\n\r\n            // if(dmsLastCheckin.gt(0)) {\r\n            //     let timePassed = moment.unix(dmsLastCheckin.toNumber()).from(moment.unix(blockTimestamp.toNumber()));\r\n            //     console.log(\"timePassed: \", timePassed);\r\n            //     console.log(\"blockTimestamp: \", blockTimestamp);\r\n            //     console.log(\"dmsLastCheckin: \", dmsLastCheckin.toNumber());\r\n            //     console.log(\"moment(blockTimestamp): \", moment.unix(blockTimestamp.toNumber()));\r\n            //     console.log(\"moment(dmsLastCheckin): \", moment.unix(dmsLastCheckin.toNumber()));\r\n            //     // TODO: Update timePassed\r\n            // }\r\n\r\n            // Load beneficiary details\r\n            refreshBeneficiaries();\r\n\r\n            let _beneficiarySelfShares;\r\n            _beneficiarySelfShares = await estateContract.beneficiaryShares(wallet.account);\r\n            setBeneficiarySelfShares(_beneficiarySelfShares.toNumber());\r\n            console.log(\"BeneficiarySelfShares: \", _beneficiarySelfShares);\r\n\r\n            let _beneficiaryTotalShares;\r\n            _beneficiaryTotalShares = await estateContract.totalShares();\r\n            setBeneficiaryTotalShares(_beneficiaryTotalShares.toNumber());\r\n            console.log(\"BeneficiaryTotalShares: \", _beneficiaryTotalShares);\r\n\r\n            let shareRatio = 0;\r\n            if(_beneficiaryTotalShares !== 0) {\r\n                shareRatio = _beneficiarySelfShares / _beneficiaryTotalShares;\r\n            }\r\n            console.log(\"ShareRatio: \", shareRatio);\r\n            \r\n            refreshAssets(_beneficiarySelfShares);\r\n        }\r\n\r\n        if (wallet.connected) {\r\n            fetchData();\r\n        }\r\n\r\n    }, [wallet.connected, wallet.account, estateAddress]);\r\n\r\n    return (\r\n        <EthereumDapp>\r\n            <div>\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        {name: \"Home\", path: \"/\"},\r\n                        {name: \"dApp\", path: \"/dapp/new-estate\"},\r\n                        {name: \"Estate\"}\r\n                    ]}\r\n                />\r\n                <Modal centered={true} show={showTodo} onHide={() => setShowTodo(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Under Construction</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"text-center\">\r\n                        <img src=\"/assets/images/under-construction.png\" alt=\"Under Construction\" />\r\n                        <h3>Coming soon!</h3>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => setShowTodo(false)}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={showEditBeneficiary} centered={true} onHide={() => setShowEditBeneficiary(false)}>\r\n                    <form onSubmit={handleAddBeneficiary}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Add Beneficiary</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"beneficiaryAddressInput\" className=\"ul-form__label\">\r\n                                    Ethereum address\r\n                                </label>\r\n                                <input type=\"text\" name=\"beneficiaryAddressInput\" className=\"form-control\"\r\n                                       value={editBeneficiaryAddress}\r\n                                       onChange={(event) => setEditBeneficiaryAddress(event.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"beneficiarySharesInput\" className=\"ul-form__label\">\r\n                                    Shares:\r\n                                </label>\r\n                                <input type=\"number\" step=\"1\" min=\"0\" name=\"beneficiarySharesInput\"\r\n                                       className=\"form-control\"\r\n                                       value={editBeneficiaryShares}\r\n                                       onChange={(event) => setEditBeneficiaryShares(event.target.value)}\r\n                                />\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={() => setShowEditBeneficiary(false)}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Save Changes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </form>\r\n                </Modal>\r\n\r\n                <Fragment>\r\n                    <SimpleCard title=\"Estate Details\" className=\"mb-4\">\r\n                        <div>\r\n                            Estate: <EthereumAddress address={estateAddress} chainId={chainId}>{estateAddress}</EthereumAddress>\r\n                        </div>\r\n                        <div>\r\n                            Gnosis Safe:\r\n                            <EthereumAddress address={gnosisSafe} url={'https://gnosis-safe.io/app/#/safes/' + gnosisSafe} chainId={chainId}>{gnosisSafe}</EthereumAddress>\r\n                            {/*<a href={'https://gnosis-safe.io/app/#/safes/' + gnosisSafe} target=\"_blank\">{gnosisSafe}</a>*/}\r\n                        </div>\r\n                        <div>\r\n                            Owner: <EthereumAddress address={owner} chainId={chainId}>{owner}</EthereumAddress>\r\n                        </div>\r\n                        <div>\r\n                            Life Signs:\r\n                            {(liveliness === 0 && deadMansSwitchLastCheckin.add(deadMansSwitchCheckinSeconds).gt(blockchainTimestamp)) && (\r\n                                <Badge pill variant=\"success\" className=\"badge-outline-success p-2 m-1\">\r\n                                    Alive\r\n                                </Badge>\r\n                            )}\r\n                            {(liveliness === 2 || (liveliness === 0 && deadMansSwitchLastCheckin.gt(0) && deadMansSwitchLastCheckin.add(deadMansSwitchCheckinSeconds).lte(blockchainTimestamp)) ) && (\r\n                                <Badge pill variant=\"warning\" className=\"badge-outline-warning p-2 m-1\">\r\n                                    Uncertain\r\n                                </Badge>\r\n                            )}\r\n                            {liveliness === 1 && (\r\n                                <Badge pill variant=\"danger\" className=\"badge-outline-danger p-2 m-1\">\r\n                                    Dead\r\n                                </Badge>\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            Executor:\r\n                            {executor === ethers.constants.AddressZero ? (\r\n                                <span> (None) </span>\r\n                            ) : (\r\n                                <span>\r\n                                    <EthereumAddress address={executor} chainId={chainId}>{executor}</EthereumAddress>\r\n                                </span>\r\n                            )}\r\n                            {isOwner && (\r\n                                <Fragment>\r\n                                    <span className=\"cursor-pointer text-success mr-2\"> <i className=\"nav-icon i-Pen-2 font-weight-bold\" onClick={() => setShowTodo(true)} /></span>\r\n                                    {executor !== ethers.constants.AddressZero && (\r\n                                        <span className=\"cursor-pointer text-danger mr-2\">\r\n                                            <i className=\"nav-icon i-Close-Window font-weight-bold\" onClick={() => setShowTodo(true)} />\r\n                                        </span>\r\n                                    )}\r\n                                </Fragment>\r\n                            )}\r\n                        </div>\r\n                    </SimpleCard>\r\n\r\n                    {/* TODO: Display dead man's switch status but not controls to non-owners */}\r\n                    {(liveliness !== 1 && (isOwner || isDeadMansSwitchEnabled)) && (\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6\">\r\n                                <SimpleCard title=\"Dead Man's Switch\" className=\"mb-4\">\r\n                                    {isOwner && (\r\n                                        <Form onSubmit={handleUpdateDeadMansSwitch}>\r\n                                            <Form.Check\r\n                                                type=\"switch\"\r\n                                                id=\"deadManEnabled\"\r\n                                                label=\"Enabled\"\r\n                                                checked={isDeadMansSwitchFormEnabled}\r\n                                                onChange={(event) => setIsDeadMansSwitchFormEnabled(event.target.checked)}\r\n                                            />\r\n                                            <div className=\"form-group mb-3\">\r\n                                                <label htmlFor=\"deadManCheckInDays\">\r\n                                                    Maximum number of <em title=\"Check-in period step size will be changed from 'minutes' to 'days' in the dApp after alpha\">minutes</em> between Check-ins:\r\n                                                </label>\r\n                                                {/* TODO: Change check-in period step size from minutes to days after alpha*/}\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    id=\"deadManCheckInDays\"\r\n                                                    placeholder=\"Check-in period in minutes\"\r\n                                                    value={deadMansSwitchFormCheckinMinutes}\r\n                                                    onChange={(event) => setDeadMansSwitchFormCheckinMinutes(event.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"mb-3\">\r\n                                                <Button type=\"submit\" variant=\"primary\">\r\n                                                    Update\r\n                                                </Button>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )}\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                            <div className=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\r\n                                                <div className=\"card-body text-center\">\r\n                                                    <i className=\"i-Stopwatch\"/>\r\n                                                    <div className=\"content\">\r\n                                                        <p className=\"text-muted mt-2 mb-0 text-capitalize\">\r\n                                                            Last Check-In\r\n                                                        </p>\r\n                                                        <p className=\"lead text-primary text-24 mb-2 text-capitalize\">\r\n                                                            {deadMansSwitchLastCheckin.eq(0) ? (\r\n                                                                <span>Never</span>\r\n                                                            ) : (\r\n                                                                <span>\r\n                                                                    {moment.unix(deadMansSwitchLastCheckin.toNumber()).from(moment.unix(blockchainTimestamp.toNumber()))}\r\n                                                                </span>\r\n                                                            )}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {isOwner && (\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                                <Button\r\n                                                    key=\"primary\"\r\n                                                    // variant=\"primary\"\r\n                                                    variant=\"success\"\r\n                                                    size=\"lg\"\r\n                                                    className=\"m-1 mb-4 text-capitalize d-block w-100 my-2\"\r\n                                                    onClick={handleImNotDeadYet}\r\n                                                >\r\n                                                    I'm Alive - Check-in Now!\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                    {/* Display when owner is alive but past due to check in to dead man switch and user is executor or beneficiary */}\r\n                                    {(liveliness === 0 && deadMansSwitchLastCheckin.add(deadMansSwitchCheckinSeconds).lte(blockchainTimestamp) && (executor === wallet.account || beneficiarySelfShares > 0)) && (\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n                                                <Button\r\n                                                    key=\"primary\"\r\n                                                    variant=\"danger\"\r\n                                                    size=\"lg\"\r\n                                                    className=\"m-1 mb-4 text-capitalize d-block w-100 my-2\"\r\n                                                    onClick={handleBringOutYourDead}\r\n                                                >\r\n                                                    Report Owner as Deceased\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    )}\r\n                                </SimpleCard>\r\n                            </div>\r\n                            {isOwner && (\r\n                                <div className=\"col-lg-6\">\r\n                                    <SimpleCard title=\"Gnosis Safe Estate Recovery Module\" className=\"mb-4\">\r\n                                        <Form onSubmit={handleUpdateGnosisSafeRecovery}>\r\n                                            <div className=\"mb-3\">\r\n                                                <Form.Check\r\n                                                    type=\"switch\"\r\n                                                    id=\"gnosisSafeRecoveryEnabled\"\r\n                                                    label=\"Enabled\"\r\n                                                    checked={gnosisRecoveryFormEnabled}\r\n                                                    onChange={(event) => setGnosisRecoveryFormEnabled(event.target.checked)}\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"form-group mb-1\">\r\n                                                <label>Parties required to recover gnosis safe:</label>\r\n                                                <Form.Check\r\n                                                    type=\"switch\"\r\n                                                    id=\"gnosisSafeRecoveryExecutor\"\r\n                                                    label=\"Executor\"\r\n                                                    checked={gnosisRecoveryFormExecutor}\r\n                                                    onChange={(event) => setGnosisRecoveryFormExecutor(event.target.checked)}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group mb-3\">\r\n                                                <label htmlFor=\"gnosisSafeRecoveryMinBeneficiaries\">Beneficiaries, minimum number:</label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    id=\"gnosisSafeRecoveryMinBeneficiaries\"\r\n                                                    placeholder=\"\"\r\n                                                    type=\"number\"\r\n                                                    min=\"1\"\r\n                                                    step=\"1\"\r\n                                                    value={gnosisRecoveryFormMinBeneficiaries}\r\n                                                    onChange={(event) => setGnosisRecoveryFormMinBeneficiaries(event.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                                Update\r\n                                            </button>\r\n                                        </Form>\r\n                                    </SimpleCard>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Only display this to Executors and Beneficiaries while Owner is still alive and Recovery Module is enabled */}\r\n                    {((executor === wallet.account || beneficiarySelfShares > 0) && liveliness === 0 && isGnosisSafeRecoveryEnabled) && (\r\n                        <SimpleCard title=\"Recover Access to Estate and Gnosis Safe\" className=\"mb-4\">\r\n                            <div>\r\n                                If the owner of this estate has lost access to their Ethereum wallet, you can assist them with recovering control of their Gnosis Safe and their Estate.\r\n                            </div>\r\n                            <div>\r\n                                To approve the recovery this step must be completed by:\r\n                            </div>\r\n                            <ul>\r\n                                {isGnosisSafeRecoveryExecutor && (\r\n                                    <li>The Executor</li>\r\n                                )}\r\n                                {(gnosisSafeRecoveryMinimumBeneficiaries.gt(0)) && (\r\n                                    <li>{gnosisSafeRecoveryMinimumBeneficiaries.toString()} Beneficiaries</li>\r\n                                )}\r\n                            </ul>\r\n                            <Form onSubmit={handleRecoverGnosisSafe}>\r\n                                <div className=\"form-group mb-3\">\r\n                                    <label htmlFor=\"recoveryNewAddress\">Address of estate owner's new wallet:</label>\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        id=\"recoveryNewAddress\"\r\n                                        placeholder=\"Owners new Ethereum address\"\r\n                                        value={gnosisRecoveryFormNewOwner}\r\n                                        onChange={(event) => setGnosisRecoveryFormNewOwner(event.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <Button type=\"submit\" variant=\"danger\">Confirm</Button>\r\n                            </Form>\r\n                        </SimpleCard>\r\n                    )}\r\n\r\n                    {/* Only display this to GnosisSafe owner when they differ from estate Owner and the owner is still alive */}\r\n                    { (isGnosisSafeOwner && !isOwner && liveliness === 0) && (\r\n                        <SimpleCard title=\"Finish Estate Recovery In Progress\" className=\"mb-4\">\r\n                            <div>\r\n                                Your Estate recovery is almost complete.  You have successfully regained control of your Gnosis Safe.\r\n                            </div>\r\n                            <div className=\"mb-4\">\r\n                                Click below to finish transferring ownership of your Estate to your new wallet:\r\n                            </div>\r\n                            <Form onSubmit={handleRecoverEstate}>\r\n                                <Button type=\"submit\" variant=\"danger\">Finish Recovery</Button>\r\n                            </Form>\r\n                        </SimpleCard>\r\n                    )}\r\n\r\n                    {/* Only display this to Executors after Death has been established */}\r\n                    { (executor === wallet.account && liveliness === 1) && (\r\n                        <SimpleCard title=\"Distribute Inheritance to Beneficiaries\" className=\"mb-4\">\r\n                            {assets.length === 0 ? (\r\n                                <div className=\"loader-bubble loader-bubble-primary m-5\" />\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <div className=\"row\">\r\n                                        {assets.map((asset, index) => (\r\n                                            <div className=\"col-lg-3 col-md-6 col-sm-6\" key={asset.address}>\r\n                                                <div className=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\r\n                                                    <div className=\"card-body text-center\">\r\n                                                        <span className={\"i- icon icon-\" + asset.symbol.toLowerCase()} />\r\n                                                        <div className=\"content\">\r\n                                                            <p className=\"text-muted mt-2 mb-0 text-capitalize\">\r\n                                                                {asset.name}\r\n                                                            </p>\r\n                                                            <p className=\"lead text-primary text-24 mb-2 text-capitalize\">\r\n                                                                {asset.balance}&nbsp;{asset.symbol}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {asset.balance > 0 && (\r\n                                                    <Fragment>\r\n                                                        <div>\r\n                                                            <Button\r\n                                                                key=\"primary\"\r\n                                                                variant=\"primary\"\r\n                                                                size=\"lg\"\r\n                                                                className=\"m-1 mb-4 text-capitalize d-block w-100 my-2\"\r\n                                                                onClick={(event) => handleDistributeAsset(event, asset.address, false)}\r\n                                                            >\r\n                                                                Distribute {asset.name}\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                        {asset.address !== ethers.constants.AddressZero && (\r\n                                                            <div>\r\n                                                                <Button\r\n                                                                    key=\"primary\"\r\n                                                                    variant=\"primary\"\r\n                                                                    size=\"lg\"\r\n                                                                    className=\"m-1 mb-4 text-capitalize d-block w-100 my-2\"\r\n                                                                    onClick={(event) => handleDistributeAsset(event, asset.address, true)}\r\n                                                                >\r\n                                                                    Distribute {asset.symbol} as Ether\r\n                                                                </Button>\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </Fragment>\r\n                                                )}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </Fragment>\r\n                            )}\r\n                        </SimpleCard>\r\n                    )}\r\n\r\n                    {/* Only display this to Beneficiaries after Death has been established */}\r\n                    {(beneficiarySelfShares > 0 && liveliness === 1) && (\r\n                        <SimpleCard title=\"Claim My Share of Inheritance\" className=\"mb-4\">\r\n                            {inheritance === null ? (\r\n                                <div className=\"loader-bubble loader-bubble-primary m-5\" />\r\n                            ) : (\r\n                                <Fragment>\r\n                                    <div>\r\n                                        My Shares:\r\n                                        <strong>{beneficiaryTotalShares > 0 ? (beneficiarySelfShares / beneficiaryTotalShares * 100).toFixed(2) + '%' : ''}</strong> ({beneficiarySelfShares} out of {beneficiaryTotalShares})\r\n                                    </div>\r\n                                    {inheritance.length === 0 ? (\r\n                                        <span />\r\n                                    ) : (\r\n                                        <Fragment>\r\n                                            <div className=\"row\">\r\n                                                {inheritance.map((asset, index) => (\r\n                                                    <div className=\"col-lg-3 col-md-6 col-sm-6\" key={asset.address}>\r\n                                                        <div className=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\r\n                                                            <div className=\"card-body text-center\">\r\n                                                                <span className={\"i- icon icon-\" + asset.symbol.toLowerCase()} />\r\n                                                                <div className=\"content\">\r\n                                                                    <p className=\"text-muted mt-2 mb-0 text-capitalize\">\r\n                                                                        {asset.name}\r\n                                                                    </p>\r\n                                                                    <p className=\"lead text-primary text-24 mb-2 text-capitalize\">\r\n                                                                        {asset.balance}&nbsp;{asset.symbol}\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {asset.balance > 0 && (\r\n                                                            <Fragment>\r\n                                                                <div>\r\n                                                                    <Button\r\n                                                                        key=\"primary\"\r\n                                                                        variant=\"primary\"\r\n                                                                        size=\"lg\"\r\n                                                                        className=\"m-1 mb-4 text-capitalize d-block w-100 my-2\"\r\n                                                                        onClick={(event) => handleClaimAsset(event, asset.address, false)}\r\n                                                                    >\r\n                                                                        Claim {asset.name}\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                                {asset.address !== ethers.constants.AddressZero && (\r\n                                                                    <div>\r\n                                                                        <Button\r\n                                                                            key=\"primary\"\r\n                                                                            variant=\"primary\"\r\n                                                                            size=\"lg\"\r\n                                                                            className=\"m-1 mb-4 text-capitalize d-block w-100 my-2\"\r\n                                                                            onClick={(event) => handleClaimAsset(event, asset.address, true)}\r\n                                                                        >\r\n                                                                            Claim {asset.symbol} as Ether\r\n                                                                        </Button>\r\n                                                                    </div>\r\n                                                                )}\r\n                                                            </Fragment>\r\n                                                        )}\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </Fragment>\r\n                                    )}\r\n                                </Fragment>\r\n                            )}\r\n                        </SimpleCard>\r\n                    )}\r\n\r\n                    <Card className=\"mb-4\">\r\n                        <Card.Body>\r\n                            <div className=\"card-title d-flex align-items-center\">\r\n                                <h3 className=\"mb-0\">Beneficiaries</h3>\r\n                                <span className=\"flex-grow-1\" />\r\n                                <span className=\"cursor-pointer text-success mr-2\">\r\n                                    <i className=\"nav-icon i-Add font-weight-bold\" title=\"Add New Beneficiary\"\r\n                                       onClick={() => setShowEditBeneficiary(true)} />\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                {beneficiaries === null ? (\r\n                                    <div className=\"loader-bubble loader-bubble-primary m-5\" />\r\n                                ) : (\r\n                                    <Fragment>\r\n                                        {beneficiaries.length === 0 ? (\r\n                                            <span> </span>\r\n                                        ) : (\r\n                                            <Fragment>\r\n                                                <div className=\"table-responsive\">\r\n                                                    <table className=\"table table-bordered table-sm text-center\">\r\n                                                        <thead>\r\n                                                        <tr>\r\n                                                            <th>#</th>\r\n                                                            <th>Address</th>\r\n                                                            <th>Shares</th>\r\n                                                            {(isOwner || (wallet.address === executor && liveliness === 2)) && (\r\n                                                                <th>Action</th>\r\n                                                            )}\r\n                                                        </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                        {beneficiaries.map((beneficiary, index) => (\r\n                                                            <tr key={beneficiary.address}>\r\n                                                                <th scope=\"row\">\r\n                                                                    {index + 1}\r\n                                                                </th>\r\n                                                                <td>\r\n                                                                    <EthereumAddress address={beneficiary.address}\r\n                                                                                     chainId={chainId}>\r\n                                                                        {beneficiary.address}\r\n                                                                    </EthereumAddress>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {beneficiary.shares}\r\n                                                                </td>\r\n                                                                {(isOwner || (wallet.address === executor && liveliness === 2)) && (\r\n                                                                    <td>\r\n                                                                                <span className=\"cursor-pointer text-success mr-2\">\r\n                                                                                    <i className=\"nav-icon i-Pen-2 font-weight-bold\"\r\n                                                                                       title=\"Edit beneficiary\"\r\n                                                                                       onClick={() => setShowTodo(true)} />\r\n                                                                                </span>\r\n                                                                        <span className=\"cursor-pointer text-danger mr-2\">\r\n                                                                                    <i className=\"nav-icon i-Close-Window font-weight-bold\"\r\n                                                                                       title=\"Remove beneficiary\"\r\n                                                                                       onClick={() => setShowTodo(true)} />\r\n                                                                                </span>\r\n                                                                    </td>\r\n                                                                )}\r\n                                                            </tr>\r\n                                                        ))}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                                <BeneficiaryPieChart beneficiaries={beneficiaries} />\r\n                                            </Fragment>\r\n                                        )}\r\n                                    </Fragment>\r\n                                )}\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <Card className=\"mb-4\">\r\n                        <Card.Body>\r\n                            <div className=\"card-title d-flex align-items-center\">\r\n                                <h3 className=\"mb-0\">Asset Holdings</h3>\r\n                                <span className=\"flex-grow-1\" />\r\n                                <span className=\"cursor-pointer text-success mr-2\">\r\n                                            <i className=\"nav-icon i-Add font-weight-bold\" title=\"Track New Asset\"\r\n                                               onClick={() => setShowTodo(true)} />\r\n                                        </span>\r\n                            </div>\r\n                            <div>\r\n                                {assets.length === 0 ? (\r\n                                    <div className=\"loader-bubble loader-bubble-primary m-5\" />\r\n                                ) : (\r\n                                    <Fragment>\r\n\r\n                                        <div className=\"row\">\r\n                                            {assets.map((asset, index) => (\r\n                                                <div className=\"col-lg-3 col-md-6 col-sm-6\" key={asset.address}>\r\n                                                    <div\r\n                                                        className=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\r\n                                                        <div className=\"card-body text-center\">\r\n                                                            <span className={\"i- icon icon-\" + asset.symbol.toLowerCase()} />\r\n                                                            <div className=\"content\">\r\n                                                                <p className=\"text-muted mt-2 mb-0 text-capitalize\">\r\n                                                                    {asset.name}\r\n                                                                </p>\r\n                                                                <p className=\"lead text-primary text-24 mb-2 text-capitalize\">\r\n                                                                    {asset.balance}&nbsp;{asset.symbol}\r\n                                                                </p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n\r\n                                        <div className=\"table-responsive\">\r\n                                            <table className=\"table table-bordered table-sm text-center\">\r\n                                                <thead>\r\n                                                <tr>\r\n                                                    <th>Asset</th>\r\n                                                    <th>Balance</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                {assets.map((asset, index) => (\r\n                                                    <tr key={asset.address}>\r\n                                                        <th scope=\"row\">\r\n                                                            {asset.address === ethers.constants.AddressZero ? (\r\n                                                                <Fragment>\r\n                                                                    {asset.name}\r\n                                                                </Fragment>\r\n                                                            ) : (\r\n                                                                <EthereumAddress address={asset.address} chainId={chainId}>\r\n                                                                    {asset.name}\r\n                                                                </EthereumAddress>\r\n                                                            )}\r\n                                                        </th>\r\n                                                        <td>\r\n                                                            {asset.balance} {asset.symbol}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <span className=\"cursor-pointer text-success mr-2\">\r\n                                                                <i className=\"nav-icon i-Arrow-Forward-2 font-weight-bold\"\r\n                                                                   title=\"Send\"\r\n                                                                   onClick={() => setShowTodo(true)} />\r\n                                                            </span>\r\n                                                            {asset.address != ethers.constants.AddressZero && (\r\n                                                                <Fragment>\r\n                                                                    <span\r\n                                                                        className=\"cursor-pointer text-danger mr-2\">\r\n                                                                        <i className=\"nav-icon i-Close-Window font-weight-bold\"\r\n                                                                           title=\"Stop tracking asset\"\r\n                                                                           onClick={() => setShowTodo(true)} />\r\n                                                                    </span>\r\n                                                                </Fragment>\r\n                                                            )}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n\r\n                                    </Fragment>\r\n                                )}\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                </Fragment>\r\n                {/*)}*/}\r\n            </div>\r\n        </EthereumDapp>\r\n    );\r\n}\r\n\r\nexport default DappEstate;\r\n","import React from 'react';\nvar FormContext = React.createContext({\n  controlId: undefined\n});\nexport default FormContext;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\nmodule.exports = exports['default'];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string.isRequired,\n  as: PropTypes.elementType\n};\nvar defaultProps = {\n  type: 'valid'\n};\nvar Feedback = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      type = _ref.type,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"type\"]);\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, type && type + \"-feedback\")\n  }));\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nFeedback.defaultProps = defaultProps;\nexport default Feedback;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      controlId = _ref.controlId,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"controlId\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-group');\n  var context = useMemo(function () {\n    return {\n      controlId: controlId\n    };\n  }, [controlId]);\n  return React.createElement(FormContext.Provider, {\n    value: context\n  }, React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }), children));\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormControl = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      bsCustomPrefix = _ref.bsCustomPrefix,\n      type = _ref.type,\n      size = _ref.size,\n      id = _ref.id,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      plaintext = _ref.plaintext,\n      readOnly = _ref.readOnly,\n      custom = _ref.custom,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"bsCustomPrefix\", \"type\", \"size\", \"id\", \"className\", \"isValid\", \"isInvalid\", \"plaintext\", \"readOnly\", \"custom\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = custom ? useBootstrapPrefix(bsCustomPrefix, 'custom') : useBootstrapPrefix(bsPrefix, 'form-control');\n  var classes;\n\n  if (plaintext) {\n    var _classes;\n\n    classes = (_classes = {}, _classes[bsPrefix + \"-plaintext\"] = true, _classes);\n  } else if (type === 'file') {\n    var _classes2;\n\n    classes = (_classes2 = {}, _classes2[bsPrefix + \"-file\"] = true, _classes2);\n  } else if (type === 'range') {\n    var _classes3;\n\n    classes = (_classes3 = {}, _classes3[bsPrefix + \"-range\"] = true, _classes3);\n  } else if (Component === 'select' && custom) {\n    var _classes4;\n\n    classes = (_classes4 = {}, _classes4[bsPrefix + \"-select\"] = true, _classes4[bsPrefix + \"-select-\" + size] = size, _classes4);\n  } else {\n    var _classes5;\n\n    classes = (_classes5 = {}, _classes5[bsPrefix] = true, _classes5[bsPrefix + \"-\" + size] = size, _classes5);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return React.createElement(Component, _extends({}, props, {\n    type: type,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && \"is-valid\", isInvalid && \"is-invalid\")\n  }));\n});\nFormControl.displayName = 'FormControl';\nFormControl.Feedback = Feedback;\nexport default FormControl;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  column: false,\n  srOnly: false\n};\nvar FormLabel = React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'label' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      column = _ref.column,\n      srOnly = _ref.srOnly,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"bsPrefix\", \"column\", \"srOnly\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  var columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = columnClass + \"-\" + column;\n  var classes = classNames(className, bsPrefix, srOnly && 'sr-only', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return React.createElement(Col, _extends({\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor\n  }, props));\n  return (// eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    React.createElement(Component, _extends({\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor\n    }, props))\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;"],"sourceRoot":""}